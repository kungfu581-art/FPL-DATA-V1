name: FPL Daily Data

on:
  schedule:
    - cron: "30 18 * * *"   # 12:00 AM IST daily
    - cron: "30 8 * * *"    # 2:00 PM IST daily
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Make data folder
        run: mkdir -p data

      - name: Fetch JSON from FPL API (no script needed)
        run: |
          curl -s https://fantasy.premierleague.com/api/bootstrap-static/ -o data/bootstrap_static.json
          curl -s https://fantasy.premierleague.com/api/fixtures/ -o data/fixtures.json

      # OPTIONAL: convert JSON -> CSV right here (stdlib only, no pandas)
      - name: Convert JSON to CSV
        run: |
          python - <<'PY'
          import json, csv, os

          os.makedirs("data", exist_ok=True)

          # bootstrap_static -> players.csv, teams.csv, positions.csv
          with open("data/bootstrap_static.json","r") as f:
            bs = json.load(f)

          def write_csv(rows, path):
            if not rows:
              open(path,"w").close(); return
            keys = sorted({k for r in rows for k in r.keys()})
            with open(path,"w",newline="",encoding="utf-8") as f:
              w = csv.DictWriter(f, fieldnames=keys)
              w.writeheader()
              for r in rows: w.writerow(r)

          write_csv(bs.get("elements", []),     "data/players.csv")
          write_csv(bs.get("teams", []),        "data/teams.csv")
          write_csv(bs.get("element_types", []),"data/positions.csv")

          # fixtures.json -> fixtures.csv
          with open("data/fixtures.json","r") as f:
            fixtures = json.load(f)
          write_csv(fixtures, "data/fixtures.csv")
          PY

      - name: Show what changed (debug)
        run: |
          echo "Repo tree:"
          ls -la
          echo "Data folder:"
          ls -la data || true

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            TS=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
            git commit -m "FPL data refresh: ${TS}"
            git push
          fi